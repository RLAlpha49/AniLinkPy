{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AniLinkPy","text":"<p>AniLink is a Python library for interacting with the AniList API. It provides methods for querying and mutating data, making it easier to integrate AniList's features into your own applications.</p>"},{"location":"#installation","title":"Installation","text":"<p>Installing AniLinkPy is straightforward. The recommended approach is to use a project manager like Poetry or Hatch, as these tools provide a clean, isolated environment for your project. Alternatively, you can use pipx, which automatically sandboxes your pip installations into separate environments. If you prefer to use pip, you can install AniLinkPy directly as well.</p> PoetryHatchpipxPip <p>In <code>pyproject.toml</code>:</p> <pre><code>[tool.poetry.dependencies]\nAniLinkPy = \"*\" # (1)!\n</code></pre> <ol> <li> <p>The <code>*</code> will install the latest version of AniLinkPy. You can also specify a version number to install a specific version. </p> <p>Specifying a Version</p> <pre><code>[tool.poetry.dependencies]\nAniLinkPy = \"1.0.0\"\n</code></pre> </li> </ol> <p>In <code>pyproject.toml</code>:</p> <pre><code>dependencies = [\n    \"AniLinkPy\" # (1)!\n]\n</code></pre> <ol> <li> <p>To install a specific version of AniLinkPy, you can specify the version number in the dependencies list:</p> <p>Specifying a Version</p> <pre><code>dependencies = [\n    \"AniLinkPy==1.0.0\"\n]\n</code></pre> </li> </ol> <p>Run the following command in your terminal:    </p> <pre><code>pipx install AniLinkPy # (1)!\n</code></pre> <ol> <li> <p>To install a specific version of AniLinkPy, you can specify the version number with the package name:</p> <p>Specifying a Version</p> <pre><code>pipx install AniLinkPy==1.0.0\n</code></pre> </li> </ol> <p>Run the following command in your terminal:    </p> <pre><code>pip install AniLinkPy # (1)!\n</code></pre> <ol> <li> <p>To install a specific version of AniLinkPy:</p> <p>Specifying a Version</p> <pre><code>pip install AniLinkPy==1.0.0\n</code></pre> </li> </ol>"},{"location":"#initialization","title":"Initialization","text":""},{"location":"#anilist","title":"AniList","text":"<p>To start using AniLink, you need to import it and initialize it with an optional authentication token. You can get an authentication token by registering your application on the AniList site.</p> <p>Importing &amp; Initializing AniLink</p> <pre><code>from AniLinkPy import AniLink\n\nauth_token = 'your-auth-token' # (1)!\naniLink = AniLink(auth_token)\n</code></pre> <ol> <li>Please replace <code>'your-auth-token'</code> with your actual authentication token.</li> </ol> <p>You can also initialize AniLink without an authentication token</p> <pre><code>aniLink = AniLink()\n</code></pre>"},{"location":"#anilist-api","title":"AniList API","text":""},{"location":"#structure","title":"Structure","text":"<p>AniLink for AniList is divided into two main sections: <code>anilist.query</code> and <code>anilist.mutation</code>. The <code>anilist.query</code> section contains methods for querying data from the AniList API, while the <code>anilist.mutation</code> section contains methods for mutating data.</p>"},{"location":"#custom-queries-and-mutations","title":"Custom Queries and Mutations","text":"<p>If needed there is a custom section <code>anilist.custom</code> that allows the user to pass a custom query or mutation to the AniList API.</p> <p>The method accepts two parameters: the query or mutation string and an optional variables object.</p> <p>Custom Query</p> <pre><code>viewer = aniLink.anilist.custom('query {Viewer {id}}')\n\nmutation = 'mutation ($about: String) {UpdateUser (about: $about) {id}}'\nvariables = { 'about': \"New about text\" }\nresponse = aniLink.anilist.custom(mutation, variables)\n</code></pre>"},{"location":"#query-methods","title":"Query Methods","text":"<p>The <code>anilist.query</code> section is further divided into main query methods and page query methods. The main query methods return a single piece of data, while the page query methods return pages of data.</p> <p>List of main query methods in <code>anilist.query</code>:</p> <ul> <li> user</li> <li> media</li> <li> mediaTrend</li> <li> airingSchedule</li> <li> character</li> <li> staff</li> <li> mediaList</li> <li> mediaListCollection</li> <li> genreCollection</li> <li> mediaTagCollection</li> <li> viewer</li> <li> notification</li> <li> studio</li> <li> review</li> <li> activity</li> <li> activityReply</li> <li> following</li> <li> follower</li> <li> thread</li> <li> threadComment</li> <li> recommendation</li> <li> markdown </li> <li> aniChartUser</li> <li> siteStatistics</li> <li> externalLinkSourceCollection</li> </ul> <p>List of page query methods in <code>anilist.query.page</code>:</p> <ul> <li> users</li> <li> medias</li> <li> characters</li> <li> staffs</li> <li> studios</li> <li> mediaLists</li> <li> airingSchedules</li> <li> mediaTrends</li> <li> notifications</li> <li> followers</li> <li> following</li> <li> activities</li> <li> activityReplies</li> <li> threads</li> <li> threadComments</li> <li> reviews</li> <li> recommendations</li> <li> likes</li> </ul>"},{"location":"#mutation-methods","title":"Mutation Methods","text":"<p>List of methods in <code>anilist.mutation</code>:</p> <ul> <li> updateUser</li> <li> saveMediaListEntry</li> <li> updateMediaListEntries</li> <li> deleteMediaListEntries</li> <li> deleteCustomLists</li> <li> saveTextActivity</li> <li> saveMessageActivity</li> <li> deleteActivity</li> <li> toggleActivityPin</li> <li> toggleActivitySubscription</li> <li> saveActivityReply</li> <li> deleteActivityReply</li> <li> toggleLike</li> <li> toggleLikeV2</li> <li> toggleFollow</li> <li> toggleFavourite</li> <li> updateFavouriteOrder</li> <li> saveReview</li> <li> deleteReview</li> <li> saveRecommendation</li> <li> saveThread</li> <li> deleteThread</li> <li> toggleThreadSubscription</li> <li> saveThreadComment</li> <li> deleteThreadComment</li> <li> updateAniChartSettings</li> <li> updateAniChartHighlights</li> </ul>"},{"location":"#error-handling","title":"Error Handling","text":"<p>AniLink will throw an error if the AniList API returns an error. You can catch these errors using a try-except block.</p> <p>Error Handling</p> <pre><code>try:\n  user = aniLink.anilist.query.user({'id': 542244})\n  print(user)\nexcept Exception as error:\n  print(error)\n</code></pre> <p>This includes status codes and error messages returned by the AniList API. Here is an example rate limit handler to catch the errors thrown by AniLink:</p> <pre><code>async def handle_rate_limit(api_call, retry_after=60):\n    while True:\n        try:\n            response = await api_call()\n            print(response)\n            return response\n        except Exception as error:\n            if '429' in str(error):\n                print('Rate limit exceeded, waiting for 1 minute before retrying...')\n                time.sleep(retry_after)\n                print('Retrying...')\n            else:\n                raise error\n</code></pre> Error Codes <p>The possible error codes returned by the AniList API are:</p> <ul> <li>400: Bad Request (e.g. missing variables, invalid variables, or invalid query)</li> <li>401: Unauthorized (e.g. invalid authentication token)</li> <li>404: Not Found (e.g. user not found)</li> <li>429: Too Many Requests (e.g. rate limit exceeded)</li> <li>500: Internal Server Error (e.g. AniList server error)</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"AniLink/","title":"AniLink API Documentation","text":"<p>This is the API documentation for the <code>AniLink</code> class in the <code>AniLinkPy</code> module.</p>"},{"location":"AniLink/#anilink-class","title":"AniLink Class","text":""},{"location":"AniLink/#AniLinkPy.AniLink.AniLink","title":"AniLink","text":"<pre><code>AniLink(auth_token=None)\n</code></pre> <p>This class represents the AniLink API.</p> ATTRIBUTE DESCRIPTION <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> <code>anilist</code> <p>An instance of the AniList class.</p> <p> TYPE: <code>AniList</code> </p> PARAMETER DESCRIPTION <code>auth_token</code> <p>The authentication token. Defaults to None.</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p> Source code in <code>AniLinkPy/AniLink.py</code> <pre><code>def __init__(self, auth_token=None):\n    \"\"\"\n    The constructor for AniLink class.\n\n    Args:\n        auth_token (str, optional): The authentication token. Defaults to None.\n    \"\"\"\n    self.auth_token = auth_token\n    self.anilist = AniList(self.auth_token)\n</code></pre>"},{"location":"AniLink/#AniLinkPy.AniLink.AniLink.anilist","title":"anilist  <code>instance-attribute</code>","text":"<pre><code>anilist = AniList(auth_token)\n</code></pre>"},{"location":"AniLink/#AniLinkPy.AniLink.AniLink.auth_token","title":"auth_token  <code>instance-attribute</code>","text":"<pre><code>auth_token = auth_token\n</code></pre>"},{"location":"AniLink/base/","title":"APIWrapper Documentation","text":"<p>This is the API documentation for the <code>APIWrapper</code> class and <code>send_request</code> function in the <code>AniLinkPy</code> module.</p>"},{"location":"AniLink/base/#apiwrapper-class","title":"APIWrapper Class","text":"<p>This class represents a wrapper for the API.</p> ATTRIBUTE DESCRIPTION <code>base_url</code> <p>The base URL for the API.</p> <p> TYPE: <code>str</code> </p> PARAMETER DESCRIPTION <code>base_url</code> <p>The base URL for the API.</p> <p> TYPE: <code>str</code> </p> Source code in <code>AniLinkPy/base/APIWrapper.py</code> <pre><code>def __init__(self, base_url):\n    \"\"\"\n    The constructor for the APIWrapper class.\n\n    Args:\n        base_url (str): The base URL for the API.\n    \"\"\"\n    self.base_url = base_url\n</code></pre>"},{"location":"AniLink/base/#AniLinkPy.base.APIWrapper.APIWrapper.base_url","title":"base_url  <code>instance-attribute</code>","text":"<pre><code>base_url = base_url\n</code></pre>"},{"location":"AniLink/base/#send_request-function","title":"send_request Function","text":"<p>This function sends a request to the specified URL.</p> PARAMETER DESCRIPTION <code>url</code> <p>The URL to send the request to.</p> <p> TYPE: <code>str</code> </p> <code>method</code> <p>The HTTP method to use for the request. Supports 'GET' and 'POST'.</p> <p> TYPE: <code>str</code> </p> <code>data</code> <p>The data to include in the request. Defaults to None.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>None</code> </p> <code>token</code> <p>The authentication token. Defaults to None.</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p> <code>timeout</code> <p>The number of seconds the client will wait for the server to send a response.</p> <p> TYPE: <code>int</code> DEFAULT: <code>15</code> </p> RAISES DESCRIPTION <code>UnsupportedMethodError</code> <p>If an unsupported method is provided.</p> <code>RequestError</code> <p>If there is an error in the request response.</p> RETURNS DESCRIPTION <code>dict</code> <p>The JSON response from the request.</p> <p> TYPE: <code>dict</code> </p> Source code in <code>AniLinkPy/base/RequestHandler.py</code> <pre><code>def send_request(url, method, data=None, token=None, timeout=15) -&gt; dict:\n    \"\"\"\n    This function sends a request to the specified URL.\n\n    Args:\n        url (str): The URL to send the request to.\n        method (str): The HTTP method to use for the request. Supports 'GET' and 'POST'.\n        data (dict, optional): The data to include in the request. Defaults to None.\n        token (str, optional): The authentication token. Defaults to None.\n        timeout (int, optional): The number of seconds the client will wait for the server to send a response.\n\n    Raises:\n        UnsupportedMethodError: If an unsupported method is provided.\n        RequestError: If there is an error in the request response.\n\n    Returns:\n        dict: The JSON response from the request.\n    \"\"\"\n    headers = {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"}\n\n    if token:\n        headers[\"Authorization\"] = f\"Bearer {token}\"\n\n    if method.upper() not in [\"GET\", \"POST\"]:\n        raise UnsupportedMethodError(method)\n\n    response = None\n\n    if method.upper() == \"GET\":\n        response = requests.get(url, headers=headers, params=data, timeout=timeout)\n    elif method.upper() == \"POST\":\n        response = requests.post(url, headers=headers, json=data, timeout=timeout)\n\n    if response is None or \"errors\" not in response.json():\n        raise RequestError(\"No response received or no errors in response.\")\n\n    if response and \"errors\" in response.json():\n        raise RequestError(response.json()[\"errors\"])\n\n    return response.json()\n</code></pre>"},{"location":"AniLink/exceptions/","title":"Exception classes Documentation","text":""},{"location":"AniLink/exceptions/#exceptions","title":"Exceptions","text":""},{"location":"AniLink/exceptions/#AniLinkPy.exceptions.RequestError","title":"RequestError","text":"<pre><code>RequestError(errors)\n</code></pre> <p>             Bases: <code>Exception</code></p> <p>Raised when there is an error in the request response.</p> Source code in <code>AniLinkPy/exceptions.py</code> <pre><code>def __init__(self, errors):\n    self.errors = errors\n    super().__init__(f\"Request Error: {self.errors}\")\n</code></pre>"},{"location":"AniLink/exceptions/#AniLinkPy.exceptions.RequestError.errors","title":"errors  <code>instance-attribute</code>","text":"<pre><code>errors = errors\n</code></pre>"},{"location":"AniLink/exceptions/#AniLinkPy.exceptions.UnsupportedMethodError","title":"UnsupportedMethodError","text":"<pre><code>UnsupportedMethodError(method)\n</code></pre> <p>             Bases: <code>Exception</code></p> <p>Raised when an unsupported method is provided to the send_request function.</p> Source code in <code>AniLinkPy/exceptions.py</code> <pre><code>def __init__(self, method):\n    self.method = method\n    super().__init__(f\"Unsupported method: {self.method}\")\n</code></pre>"},{"location":"AniLink/exceptions/#AniLinkPy.exceptions.UnsupportedMethodError.method","title":"method  <code>instance-attribute</code>","text":"<pre><code>method = method\n</code></pre>"},{"location":"AniLink/AniList/","title":"AniList API Documentation","text":""},{"location":"AniLink/AniList/#AniLinkPy.apis.anilist.anilist.AniList","title":"AniList","text":"<pre><code>AniList(auth_token)\n</code></pre> <p>This class represents the AniList API.</p> ATTRIBUTE DESCRIPTION <code>query</code> <p>An instance of the Query class.</p> <p> TYPE: <code>Query</code> </p> <code>mutation</code> <p>An instance of the Mutation class.</p> <p> TYPE: <code>Mutation</code> </p> PARAMETER DESCRIPTION <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> Source code in <code>AniLinkPy/apis/anilist/anilist.py</code> <pre><code>def __init__(self, auth_token):\n    \"\"\"\n    The constructor for AniList class.\n\n    Args:\n        auth_token (str): The authentication token.\n    \"\"\"\n    self.query = Query(auth_token)\n    self.mutation = Mutation()\n</code></pre>"},{"location":"AniLink/AniList/#AniLinkPy.apis.anilist.anilist.AniList.mutation","title":"mutation  <code>instance-attribute</code>","text":"<pre><code>mutation = Mutation()\n</code></pre>"},{"location":"AniLink/AniList/#AniLinkPy.apis.anilist.anilist.AniList.query","title":"query  <code>instance-attribute</code>","text":"<pre><code>query = Query(auth_token)\n</code></pre>"},{"location":"AniLink/AniList/custom/","title":"Anilist Custom Request Documentation","text":""},{"location":"AniLink/AniList/custom/#AniLinkPy.apis.anilist.custom.CustomRequest","title":"CustomRequest","text":"<pre><code>CustomRequest(auth_token)\n</code></pre> <p>This class represents a custom request in the AniLink API.</p> ATTRIBUTE DESCRIPTION <code>base_url</code> <p>The base URL for the AniLink API.</p> <p> TYPE: <code>str</code> </p> <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> PARAMETER DESCRIPTION <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> Source code in <code>AniLinkPy/apis/anilist/custom.py</code> <pre><code>def __init__(self, auth_token):\n    \"\"\"\n    The constructor for the CustomRequest class.\n\n    Args:\n        auth_token (str): The authentication token.\n    \"\"\"\n    self.base_url = \"https://graphql.anilist.co\"\n    self.auth_token = auth_token\n</code></pre>"},{"location":"AniLink/AniList/custom/#AniLinkPy.apis.anilist.custom.CustomRequest.auth_token","title":"auth_token  <code>instance-attribute</code>","text":"<pre><code>auth_token = auth_token\n</code></pre>"},{"location":"AniLink/AniList/custom/#AniLinkPy.apis.anilist.custom.CustomRequest.base_url","title":"base_url  <code>instance-attribute</code>","text":"<pre><code>base_url = 'https://graphql.anilist.co'\n</code></pre>"},{"location":"AniLink/AniList/custom/#AniLinkPy.apis.anilist.custom.CustomRequest.custom","title":"custom","text":"<pre><code>custom(query, variables=None) -&gt; dict\n</code></pre> <p>This method is used to send a custom Query.</p> PARAMETER DESCRIPTION <code>query</code> <p>The Query string.</p> <p> TYPE: <code>str</code> </p> <code>variables</code> <p>The variables for the Query. Defaults to None.</p> <p> TYPE: <code>dict</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>The response from the custom Query.</p> <p> TYPE: <code>dict</code> </p> Source code in <code>AniLinkPy/apis/anilist/custom.py</code> <pre><code>def custom(self, query, variables=None) -&gt; dict:\n    \"\"\"\n    This method is used to send a custom Query.\n\n    Args:\n        query (str): The Query string.\n        variables (dict, optional): The variables for the Query. Defaults to None.\n\n    Returns:\n        dict: The response from the custom Query.\n    \"\"\"\n    if variables is None:\n        variables = {}\n\n    data = {\"Query\": query, \"variables\": variables}\n    return send_request(self.base_url, \"POST\", data, self.auth_token)\n</code></pre>"},{"location":"AniLink/AniList/schemas/","title":"Basic Schema Documentation","text":"<p>This is the documentation for the basic schemas.</p>"},{"location":"AniLink/AniList/schemas/#coverimage-schema","title":"CoverImage Schema","text":"<p>This is the CoverImageSchema for the Anilist API. It defines the structure of the cover image data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>extraLarge</code> <p>The URL of the extra large cover image.</p> <p> TYPE: <code>str</code> </p> <code>large</code> <p>The URL of the large cover image.</p> <p> TYPE: <code>str</code> </p> <code>medium</code> <p>The URL of the medium cover image.</p> <p> TYPE: <code>str</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.cover_image_schema.COVERIMAGESCHEMA","title":"COVERIMAGESCHEMA  <code>module-attribute</code>","text":"<pre><code>COVERIMAGESCHEMA = '\\ncoverImage {\\n  extraLarge\\n  large\\n  medium\\n}\\n'\n</code></pre>"},{"location":"AniLink/AniList/schemas/#image-schema","title":"Image Schema","text":"<p>This is the ImageSchema for the Anilist API. It defines the structure of the image data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>large</code> <p>The URL of the large image.</p> <p> TYPE: <code>str</code> </p> <code>medium</code> <p>The URL of the medium image.</p> <p> TYPE: <code>str</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.image_schema.IMAGESCHEMA","title":"IMAGESCHEMA  <code>module-attribute</code>","text":"<pre><code>IMAGESCHEMA = '\\nimage {\\n  large\\n  medium\\n}\\n'\n</code></pre>"},{"location":"AniLink/AniList/schemas/#name-schema","title":"Name Schema","text":"<p>This is the NameSchema for the Anilist API. It defines the structure of the name data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>first</code> <p>The user's first name.</p> <p> TYPE: <code>str</code> </p> <code>last</code> <p>The user's last name.</p> <p> TYPE: <code>str</code> </p> <code>full</code> <p>The user's full name.</p> <p> TYPE: <code>str</code> </p> <code>native</code> <p>The user's name in their native language.</p> <p> TYPE: <code>str</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.name_schema.NAMESCHEMA","title":"NAMESCHEMA  <code>module-attribute</code>","text":"<pre><code>NAMESCHEMA = '\\nname {\\nfirst\\nlast\\nfull\\nnative\\n}\\n'\n</code></pre>"},{"location":"AniLink/AniList/schemas/#tag-schema","title":"Tag Schema","text":"<p>This is the TagSchema for the Anilist API. It defines the structure of the tag data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>The tag's ID.</p> <p> TYPE: <code>int</code> </p> <code>name</code> <p>The tag's name.</p> <p> TYPE: <code>str</code> </p> <code>description</code> <p>The tag's description.</p> <p> TYPE: <code>str</code> </p> <code>category</code> <p>The tag's category.</p> <p> TYPE: <code>str</code> </p> <code>rank</code> <p>The tag's rank.</p> <p> TYPE: <code>int</code> </p> <code>isGeneralSpoiler</code> <p>Whether the tag is a general spoiler.</p> <p> TYPE: <code>bool</code> </p> <code>isMediaSpoiler</code> <p>Whether the tag is a media spoiler.</p> <p> TYPE: <code>bool</code> </p> <code>isAdult</code> <p>Whether the tag is adult.</p> <p> TYPE: <code>bool</code> </p> <code>userId</code> <p>The user's ID.</p> <p> TYPE: <code>int</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.tag_schema.TAGSCHEMA","title":"TAGSCHEMA  <code>module-attribute</code>","text":"<pre><code>TAGSCHEMA = '\\nid\\nname\\ndescription\\ncategory\\nrank\\nisGeneralSpoiler\\nisMediaSpoiler\\nisAdult\\nuserId\\n'\n</code></pre>"},{"location":"AniLink/AniList/schemas/#title-schema","title":"Title Schema","text":"<p>This is the TitleSchema for the Anilist API. It defines the structure of the title data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>romaji</code> <p>The title in romaji.</p> <p> TYPE: <code>str</code> </p> <code>english</code> <p>The title in English.</p> <p> TYPE: <code>str</code> </p> <code>native</code> <p>The title in the native language.</p> <p> TYPE: <code>str</code> </p> <code>userPreferred</code> <p>The user's preferred title.</p> <p> TYPE: <code>str</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.title_schema.TITLESCHEMA","title":"TITLESCHEMA  <code>module-attribute</code>","text":"<pre><code>TITLESCHEMA = '\\ntitle {\\n  romaji\\n  english\\n  native\\n  userPreferred\\n}\\n'\n</code></pre>"},{"location":"AniLink/AniList/schemas/#user-stats-schema","title":"User Stats Schema","text":"<p>This is the UserAnimeStatsSchema for the Anilist API. It defines the structure of the user's anime statistics data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>count</code> <p>The count of anime the user has watched.</p> <p> TYPE: <code>int</code> </p> <code>meanScore</code> <p>The mean score of the anime the user has watched.</p> <p> TYPE: <code>float</code> </p> <code>minutesWatched</code> <p>The total minutes the user has watched anime.</p> <p> TYPE: <code>int</code> </p> <code>mediaIds</code> <p>The list of IDs of the anime the user has watched.</p> <p> TYPE: <code>list</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.user_stats_schema.USERANIMESTATSSCHEMA","title":"USERANIMESTATSSCHEMA  <code>module-attribute</code>","text":"<pre><code>USERANIMESTATSSCHEMA = '\\ncount\\nmeanScore\\nminutesWatched\\nmediaIds\\n'\n</code></pre> <p>This is the UserMangaStatsSchema for the Anilist API. It defines the structure of the user's manga statistics data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>count</code> <p>The count of manga the user has read.</p> <p> TYPE: <code>int</code> </p> <code>meanScore</code> <p>The mean score of the manga the user has read.</p> <p> TYPE: <code>float</code> </p> <code>chaptersRead</code> <p>The total chapters the user has read in manga.</p> <p> TYPE: <code>int</code> </p> <code>mediaIds</code> <p>The list of IDs of the manga the user has read.</p> <p> TYPE: <code>list</code> </p>"},{"location":"AniLink/AniList/schemas/#AniLinkPy.apis.anilist.schemas.user_stats_schema.USERMANGASTATSSCHEMA","title":"USERMANGASTATSSCHEMA  <code>module-attribute</code>","text":"<pre><code>USERMANGASTATSSCHEMA = '\\ncount\\nmeanScore\\nchaptersRead\\nmediaIds\\n'\n</code></pre>"},{"location":"AniLink/AniList/Mutations/","title":"Anilist Mutation Documentation","text":"<p>This module contains the Mutation class which represents a mutation in the AniLink API.</p>"},{"location":"AniLink/AniList/Mutations/#AniLinkPy.apis.anilist.mutation.mutation.Mutation","title":"Mutation","text":"<p>This class represents a Mutation in the AniLink API.</p>"},{"location":"AniLink/AniList/Mutations/#AniLinkPy.apis.anilist.mutation.mutation.Mutation.updateuser","title":"updateuser","text":"<pre><code>updateuser(variables) -&gt; None\n</code></pre> <p>This method is used to update a user.</p> PARAMETER DESCRIPTION <code>variables</code> <p>The variables for the mutation.</p> <p> TYPE: <code>dict</code> </p> RETURNS DESCRIPTION <code>None</code> <p>This method is not yet implemented.</p> <p> TYPE: <code>None</code> </p> Source code in <code>AniLinkPy/apis/anilist/mutation/mutation.py</code> <pre><code>def updateuser(self, variables) -&gt; None:\n    \"\"\"\n    This method is used to update a user.\n\n    Args:\n        variables (dict): The variables for the mutation.\n\n    Returns:\n        None: This method is not yet implemented.\n    \"\"\"\n</code></pre>"},{"location":"AniLink/AniList/Queries/schemas/","title":"Query Schemas Documentation","text":"<p>This is the documentation for the Query schemas.</p>"},{"location":"AniLink/AniList/Queries/schemas/#userschema","title":"UserSchema","text":"<p>This is the UserSchema for the Anilist API. It defines the structure of the user data that is expected to be returned from the API.</p> ATTRIBUTE DESCRIPTION <code>id</code> <p>The user's ID.</p> <p> TYPE: <code>int</code> </p> <code>name</code> <p>The user's name.</p> <p> TYPE: <code>str</code> </p> <code>about</code> <p>The user's about information.</p> <p> TYPE: <code>str</code> </p> <code>avatar</code> <p>The user's avatar, with 'large' and 'medium' sizes.</p> <p> TYPE: <code>dict</code> </p> <code>bannerImage</code> <p>The URL of the user's banner image.</p> <p> TYPE: <code>str</code> </p> <code>isFollowing</code> <p>Whether the user is following.</p> <p> TYPE: <code>bool</code> </p> <code>isFollower</code> <p>Whether the user is a follower.</p> <p> TYPE: <code>bool</code> </p> <code>isBlocked</code> <p>Whether the user is blocked.</p> <p> TYPE: <code>bool</code> </p> <code>bans</code> <p>The user's bans.</p> <p> TYPE: <code>list</code> </p> <code>options</code> <p>The user's options.</p> <p> TYPE: <code>dict</code> </p> <code>mediaListOptions</code> <p>The user's media list options.</p> <p> TYPE: <code>dict</code> </p> <code>favourites</code> <p>The user's favourites.</p> <p> TYPE: <code>dict</code> </p> <code>statistics</code> <p>The user's statistics.</p> <p> TYPE: <code>dict</code> </p> <code>stats</code> <p>The user's stats.</p> <p> TYPE: <code>dict</code> </p> <code>unreadNotificationCount</code> <p>The user's unread notification count.</p> <p> TYPE: <code>int</code> </p> <code>siteUrl</code> <p>The user's site URL.</p> <p> TYPE: <code>str</code> </p> <code>donatorTier</code> <p>The user's donator tier.</p> <p> TYPE: <code>int</code> </p> <code>donatorBadge</code> <p>The user's donator badge.</p> <p> TYPE: <code>str</code> </p> <code>moderatorRoles</code> <p>The user's moderator roles.</p> <p> TYPE: <code>list</code> </p> <code>createdAt</code> <p>The timestamp of when the user was created.</p> <p> TYPE: <code>int</code> </p> <code>updatedAt</code> <p>The timestamp of when the user was last updated.</p> <p> TYPE: <code>int</code> </p> <code>previousNames</code> <p>The user's previous names.</p> <p> TYPE: <code>list</code> </p>"},{"location":"AniLink/AniList/Queries/schemas/#AniLinkPy.apis.anilist.schemas.query.user_schema.UserSchema","title":"UserSchema  <code>module-attribute</code>","text":"<pre><code>UserSchema = f'\n  id\n  name\n  about(asHtml: $asHtml)\n  avatar {\n    large\n    medium\n  }\n  bannerImage\n  isFollowing\n  isFollower\n  isBlocked\n  bans\n  options {\n    titleLanguage\n    displayAdultContent\n    airingNotifications\n    profileColor\n    notificationOptions {\n      type\n      enabled\n    }\n    timezone\n    activityMergeTime\n    staffNameLanguage\n    restrictMessagesToFollowing\n    disabledListActivity {\n    disabled\n    type\n    }\n  }\n  mediaListOptions {\n    scoreFormat\n    rowOrder\n    animeList {\n      sectionOrder\n      splitCompletedSectionByFormat\n      customLists\n      advancedScoring\n      advancedScoringEnabled\n    }\n    mangaList {\n      sectionOrder\n      splitCompletedSectionByFormat\n      customLists\n      advancedScoring\n      advancedScoringEnabled\n    }\n  }\n  favourites {\n    anime (perPage: 50) {\n      edges {\n        node {\n          id\n          {TITLESCHEMA}\n        }\n      }\n      nodes {\n        id\n        {TITLESCHEMA}\n      }\n    }\n    manga (perPage: 50) {\n      edges {\n        node {\n        id\n        {TITLESCHEMA}\n        }\n      }\n      nodes {\n        id\n        {TITLESCHEMA}\n      }\n    }\n    characters (perPage: 50) {\n      edges {\n        id\n        role\n        name\n        voiceActors {\n          id\n          {NAMESCHEMA}\n          {IMAGESCHEMA}\n        }\n        media {\n          id\n          {TITLESCHEMA}\n          {COVERIMAGESCHEMA}\n        }\n        favouriteOrder\n        node {\n          id\n          {NAMESCHEMA}\n          {IMAGESCHEMA}\n        }\n      }\n    }\n    staff (perPage: 50) {\n      edges {\n        id\n        role\n        favouriteOrder\n        node {\n          id\n          {NAMESCHEMA}\n          {IMAGESCHEMA}\n        }\n      }\n    }\n    studios (perPage: 50) {\n      edges {\n        id\n        isMain\n        favouriteOrder\n        node {\n          id\n          name\n          isAnimationStudio\n          siteUrl\n        }\n      }\n    }\n  }\n  statistics {\n    anime {\n      count\n      meanScore\n      standardDeviation\n      minutesWatched\n      episodesWatched\n      formats (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        format\n      }\n      statuses (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        status\n      }\n      scores (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        score\n      }\n      lengths (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        length\n      }\n      releaseYears (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        releaseYear\n      }\n      startYears (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        startYear\n      }\n      genres (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        genre\n      }\n      tags (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        tag {\n          {TAGSCHEMA}\n        }\n      }\n      countries (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        country\n      }\n      voiceActors (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        voiceActor {\n          id\n          {NAMESCHEMA}\n        }\n        characterIds\n      }\n      staff (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        staff {\n          id\n          {NAMESCHEMA}\n        }\n      }\n      studios (limit: $animeStatLimit, sort: $animeStatSort) {\n        {USERANIMESTATSSCHEMA}\n        studio {\n          id\n          name\n        }\n      }\n    }\n    manga {\n      count\n      meanScore\n      standardDeviation\n      chaptersRead\n      volumesRead\n      formats (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        format\n      }\n      statuses (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        status\n      }\n      scores (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        score\n      }\n      lengths (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        length\n      }\n      releaseYears (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        releaseYear\n      }\n      startYears (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        startYear\n      }\n      genres (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        genre\n      }\n      tags (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        tag {\n          {TAGSCHEMA}\n        }\n      }\n      countries (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        country\n      }\n      staff (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        staff {\n          id\n          {NAMESCHEMA}\n        }\n      }\n      studios (limit: $mangaStatLimit, sort: $mangaStatSort) {\n        {USERMANGASTATSSCHEMA}\n        studio {\n          id\n          name\n        }\n      }\n    }\n  }\n  stats {\n    watchedTime\n    chaptersRead\n    activityHistory {\n      date\n      amount\n      level\n    }\n    animeStatusDistribution {\n      status\n      amount\n    }\n    mangaStatusDistribution {\n      status\n      amount\n    }\n    animeScoreDistribution {\n      score\n      amount\n    }\n    mangaScoreDistribution {\n      score\n      amount\n    }\n    animeListScores {\n      meanScore\n      standardDeviation\n    }\n    mangaListScores {\n      meanScore\n      standardDeviation\n    }\n    favouredGenresOverview {\n      genre\n      amount\n      meanScore\n      timeWatched\n    }\n    favouredGenres {\n      genre\n      amount\n      meanScore\n      timeWatched\n    }\n    favouredTags {\n      tag {\n        {TAGSCHEMA}\n      }\n      amount\n      meanScore\n      timeWatched\n    }\n    favouredActors {\n      staff {\n        id\n        {NAMESCHEMA}\n      }\n      amount\n      meanScore\n      timeWatched\n    }\n    favouredStaff {\n      staff {\n        id\n        {NAMESCHEMA}\n      }\n      amount\n      meanScore\n      timeWatched\n    }\n    favouredStudios {\n      studio {\n        id\n        name\n      }\n      amount\n      meanScore\n      timeWatched\n    }\n    favouredYears {\n      year\n      amount\n      meanScore\n    }\n    favouredFormats {\n      format\n      amount\n    }\n  }\n  unreadNotificationCount\n  siteUrl\n  donatorTier\n  donatorBadge\n  moderatorRoles\n  createdAt\n  updatedAt\n  previousNames {\n    name\n    createdAt\n    updatedAt\n  }\n'\n</code></pre>"},{"location":"AniLink/AniList/Queries/user/","title":"User Query Documentation","text":""},{"location":"AniLink/AniList/Queries/user/#AniLinkPy.apis.anilist.query.user.UserQuery","title":"UserQuery","text":"<pre><code>UserQuery(auth_token)\n</code></pre> <p>This class represents a user Query in the AniLink API.</p> ATTRIBUTE DESCRIPTION <code>base_url</code> <p>The base URL for the AniLink API.</p> <p> TYPE: <code>str</code> </p> <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> PARAMETER DESCRIPTION <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> Source code in <code>AniLinkPy/apis/anilist/query/user.py</code> <pre><code>def __init__(self, auth_token):\n    \"\"\"\n    The constructor for the UserQuery class.\n\n    Args:\n        auth_token (str): The authentication token.\n    \"\"\"\n    self.base_url = \"https://graphql.anilist.co\"\n    self.auth_token = auth_token\n</code></pre>"},{"location":"AniLink/AniList/Queries/user/#AniLinkPy.apis.anilist.query.user.UserQuery.auth_token","title":"auth_token  <code>instance-attribute</code>","text":"<pre><code>auth_token = auth_token\n</code></pre>"},{"location":"AniLink/AniList/Queries/user/#AniLinkPy.apis.anilist.query.user.UserQuery.base_url","title":"base_url  <code>instance-attribute</code>","text":"<pre><code>base_url = 'https://graphql.anilist.co'\n</code></pre>"},{"location":"AniLink/AniList/Queries/user/#AniLinkPy.apis.anilist.query.user.UserQuery.user","title":"user","text":"<pre><code>user(variables) -&gt; dict\n</code></pre> <p>This method is used to send a user Query.</p> PARAMETER DESCRIPTION <code>variables</code> <p>The variables for the Query.</p> <p> TYPE: <code>dict</code> </p> RAISES DESCRIPTION <code>ValueError</code> <p>If no variables are provided.</p> RETURNS DESCRIPTION <code>dict</code> <p>The response from the user Query.</p> <p> TYPE: <code>dict</code> </p> Source code in <code>AniLinkPy/apis/anilist/query/user.py</code> <pre><code>def user(self, variables) -&gt; dict:\n    \"\"\"\n    This method is used to send a user Query.\n\n    Args:\n        variables (dict): The variables for the Query.\n\n    Raises:\n        ValueError: If no variables are provided.\n\n    Returns:\n        dict: The response from the user Query.\n    \"\"\"\n    if not variables:\n        raise ValueError(\"At least one variable must be provided\")\n\n    query = f\"\"\"\n        Query ($id: Int, $name: String, $isModerator: Boolean, $search: String, $sort: [UserSort],\n            $asHtml: Boolean, $animeStatLimit: Int, $mangaStatLimit: Int, $animeStatSort: [UserStatisticsSort],\n            $mangaStatSort: [UserStatisticsSort]) {{ User (id: $id, name: $name, isModerator: $isModerator,\n            search: $search, sort: $sort) {{ {UserSchema}\n            }}\n        }}\n    \"\"\"\n\n    data = {\"Query\": query, \"variables\": variables}\n    return send_request(self.base_url, \"POST\", data, self.auth_token)\n</code></pre>"},{"location":"AniLink/AniList/Queries/Page/","title":"Anilist Query Page Documentation","text":"<p>This module contains the Page class which represents a Page in the AniLink API.</p>"},{"location":"AniLink/AniList/Queries/Page/#AniLinkPy.apis.anilist.query.page.page.Page","title":"Page","text":"<p>This class represents a Page in the AniLink API.</p>"},{"location":"AniLink/AniList/Queries/Page/#AniLinkPy.apis.anilist.query.page.page.Page.users","title":"users","text":"<pre><code>users(user_ids) -&gt; None\n</code></pre> <p>This method is used to get users by their IDs.</p> PARAMETER DESCRIPTION <code>user_ids</code> <p>A list of user IDs.</p> <p> TYPE: <code>list</code> </p> RETURNS DESCRIPTION <code>None</code> <p>This method is not yet implemented.</p> <p> TYPE: <code>None</code> </p> Source code in <code>AniLinkPy/apis/anilist/query/page/page.py</code> <pre><code>def users(self, user_ids) -&gt; None:\n    \"\"\"\n    This method is used to get users by their IDs.\n\n    Args:\n        user_ids (list): A list of user IDs.\n\n    Returns:\n        None: This method is not yet implemented.\n    \"\"\"\n</code></pre>"},{"location":"AniLink/AniList/Query/","title":"Anilist Query Documentation","text":""},{"location":"AniLink/AniList/Query/#AniLinkPy.apis.anilist.query.query.Query","title":"Query","text":"<pre><code>Query(auth_token)\n</code></pre> <p>This class represents a Query in the AniLink API.</p> ATTRIBUTE DESCRIPTION <code>page</code> <p>An instance of the Page class.</p> <p> TYPE: <code>Page</code> </p> <code>custom_query</code> <p>An instance of the CustomRequest class.</p> <p> TYPE: <code>CustomRequest</code> </p> <code>user_query</code> <p>An instance of the UserQuery class.</p> <p> TYPE: <code>UserQuery</code> </p> PARAMETER DESCRIPTION <code>auth_token</code> <p>The authentication token.</p> <p> TYPE: <code>str</code> </p> Source code in <code>AniLinkPy/apis/anilist/query/query.py</code> <pre><code>def __init__(self, auth_token):\n    \"\"\"\n    The constructor for Query class.\n\n    Args:\n        auth_token (str): The authentication token.\n    \"\"\"\n    self.page = Page()\n    self.custom_query = CustomRequest(auth_token)\n    self.user_query = UserQuery(auth_token)\n</code></pre>"},{"location":"AniLink/AniList/Query/#AniLinkPy.apis.anilist.query.query.Query.custom_query","title":"custom_query  <code>instance-attribute</code>","text":"<pre><code>custom_query = CustomRequest(auth_token)\n</code></pre>"},{"location":"AniLink/AniList/Query/#AniLinkPy.apis.anilist.query.query.Query.page","title":"page  <code>instance-attribute</code>","text":"<pre><code>page = Page()\n</code></pre>"},{"location":"AniLink/AniList/Query/#AniLinkPy.apis.anilist.query.query.Query.user_query","title":"user_query  <code>instance-attribute</code>","text":"<pre><code>user_query = UserQuery(auth_token)\n</code></pre>"},{"location":"AniLink/AniList/Query/#AniLinkPy.apis.anilist.query.query.Query.custom","title":"custom","text":"<pre><code>custom(query, variables) -&gt; dict\n</code></pre> <p>This method is used to send a custom Query.</p> PARAMETER DESCRIPTION <code>query</code> <p>The Query string.</p> <p> TYPE: <code>str</code> </p> <code>variables</code> <p>The variables for the Query.</p> <p> TYPE: <code>dict</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>The response from the custom Query.</p> <p> TYPE: <code>dict</code> </p> Source code in <code>AniLinkPy/apis/anilist/query/query.py</code> <pre><code>def custom(self, query, variables) -&gt; dict:\n    \"\"\"\n    This method is used to send a custom Query.\n\n    Args:\n        query (str): The Query string.\n        variables (dict): The variables for the Query.\n\n    Returns:\n        dict: The response from the custom Query.\n    \"\"\"\n    return self.custom_query.custom(query, variables)\n</code></pre>"},{"location":"AniLink/AniList/Query/#AniLinkPy.apis.anilist.query.query.Query.user","title":"user","text":"<pre><code>user(variables) -&gt; dict\n</code></pre> <p>This method is used to get a user.</p> PARAMETER DESCRIPTION <code>variables</code> <p>The variables for the Query.</p> <p> TYPE: <code>dict</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>The response from the user Query.</p> <p> TYPE: <code>dict</code> </p> Source code in <code>AniLinkPy/apis/anilist/query/query.py</code> <pre><code>def user(self, variables) -&gt; dict:\n    \"\"\"\n    This method is used to get a user.\n\n    Args:\n        variables (dict): The variables for the Query.\n\n    Returns:\n        dict: The response from the user Query.\n    \"\"\"\n    return self.user_query.user(variables)\n</code></pre>"}]}